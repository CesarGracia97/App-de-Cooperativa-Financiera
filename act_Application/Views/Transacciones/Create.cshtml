@model act_Application.Models.BD.ActTransaccione
@{
    ViewData["Title"] = "Transaccion";
    DateTime minDate = DateTime.Now.AddDays(14);
    string minDateStr = minDate.ToString("yyyy-MM-dd");
    DateTime maxDate = DateTime.Now.AddDays(25);
    string maxDateStr = maxDate.ToString("yyyy-MM-dd");
    DateTime minDateP = DateTime.Now.AddDays(26);
    string minDateStrP = minDateP.ToString("yyyy-MM-dd");
}
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/css/General/Transacciones.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/Transaccion.js"> </script>
</head>
<div>
    <div class="container">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!--Contenedor de la Razon-->
            <div class="form-group">
                <label asp-for="Razon">Razón:</label>
                <select asp-for="Razon" id="Razon" placeholder="Seleccionar una Razon..." required>
                    <option value="0">Seleccionar una Razon...</option>
                    @foreach (var item in ViewData["ItemsRazon"] as List<act_Application.Models.Sistema.ListItems>)
                    {
                        <option value="@item.Nombre">@item.Nombre</option>
                    }
                    <input type="hidden" asp-for="Razon" />
                </select>
                <span asp-validation-for="Razon" class="text-danger"></span>
            </div>

            <!--Contenedor de Valor-->
            <div class="form-group" >
                <label asp-for="Valor">Monto:</label>
                <div class="input-container">
                    <span class="dollar-sign">$</span>
                    <input asp-for="Valor" class="input-monto" type="number" step="0.01" min="0.01" id="Valor" placeholder="Agrega el Valor que deseas que te presten" required/>
                    <span asp-validation-for="Valor" class="text-danger"></span>
                </div>
            </div>

            <!--Contenedor del Tipo de Cuota-->
            <div class="form-group">
                <label asp-for="TipoCuota">Tipo de Cuota:</label>
                <select asp-for="TipoCuota" id="TipoCuota" placeholder="Seleccionar un Tipo de Cuota..." required>
                    <option value="">Seleccionar un Tipo de Cuota...</option>
                    @foreach (var item in ViewData["ItemsCuota"] as List<act_Application.Models.Sistema.ListItems>)
                    {
                        <option value="@item.Nombre">@item.Nombre</option>
                    }
                    <input type="hidden" asp-for="TipoCuota" />
                </select>
                <span asp-validation-for="TipoCuota" class="text-danger"></span>
            </div>

            <!--Contenedor de la Fecha de Entrega del Dinero-->
            <div class="form-group">
                <label asp-for="FechaEntregaDinero">Fecha de Entrega del Efectivo</label>
                <input asp-for="FechaEntregaDinero" type="date" class="inpdate" min="@minDateStr" max="@maxDateStr" id="FechaEntregaDinero" required/>
                <span asp-validation-for="FechaEntregaDinero" class="text-danger"></span>
            </div>

            <!--
            <script>
                var tipoCuotaSelect = document.getElementById('TipoCuota');
                var fechaInicioInput = document.getElementById('FechaIniCoutaPrestamo');

                tipoCuotaSelect.addEventListener('change', function () {
                    var selectedOption = tipoCuotaSelect.options[tipoCuotaSelect.selectedIndex].value;

                    // Obtener la fecha seleccionada en el input de Fecha de Inicio
                    var fechaInicio = new Date(fechaInicioInput.value);

                    // Crear una nueva fecha para Fecha de Pago Total
                    var fechaPagoTotal = new Date(fechaInicio);

                    switch (selectedOption) {
                        case 'PAGO UNICO':
                            fechaPagoTotal.setMonth(fechaInicio.getMonth() + 1);
                            break;
                        case 'PAGO MENSUAL':
                            fechaPagoTotal.setMonth(fechaInicio.getMonth() + 3);
                            break;
                    }
                    // Formatear la fecha para el input de Fecha de Pago Total
                    var fechaPagoTotalFormatted = fechaPagoTotal.toISOString().split('T')[0];

                    // Establecer el valor mínimo en el input de Fecha de Pago Total
                    document.getElementById('FechPagoTotalPrestamo').min = fechaPagoTotalFormatted;
                });
            </script>
            -->
            <!--Contenedor de la Fecha de Inicio de Pago-->
            <div class="form-group">
                <label asp-for="FechaIniCoutaPrestamo">Fecha Inicio de Pago de Cuotas</label>
                <input asp-for="FechaIniCoutaPrestamo" type="date" class="inpdate" id="FechaIniCoutaPrestamo" min="@minDateStrP" required/>
                <span asp-validation-for="FechaIniCoutaPrestamo" class="text-danger"></span>
            </div>

            <!--Contenedor de los Botones-->
            <div class="buttons">
                <button type="submit" class="save-button"></button>
                <button type="button" onclick="limpiar()" class="clear-button">Limpiar</button>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
