@model IEnumerable<act_Application.Models.ActAportacione>;
@using System.Globalization;
@using act_Application.Data;
@{
    ViewData["Title"] = "Tabla de Aportaciones";
    var aportacionRepository = new AportacionRepository();
    int totalAportaciones = aportacionRepository.GetTotalAportaciones();
}
<header>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/tablaAportaciones.css">
    <script src="~/js/mensajeAportantes.js"> </script>
</header>
<body>
    <div class="content-text">
        <h1>Tabla de Aportaciones</h1>
        <hr />
        <div class="table-container">
            @if (totalAportaciones > 0)
            {
                <table class="aportacion-table">
                    <thead>
                        <tr>
                            <th>Aportantes</th>
                            @for (int i = 1; i <= 12; i++)
                            {
                                <th>@CultureInfo.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName(i)</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var aportacion in Model.GroupBy(ap => ap.NombreUsuario))
                        {
                            <tr>
                                <td>@aportacion.Key</td>
                                @for (int month = 1; month <= 12; month++)
                                {
                                    var usuarioAportacion = aportacion.FirstOrDefault(a => a.FechaAportacion.Month == month);
                                    var valor = usuarioAportacion?.Valor ?? 0;
                                    var detallesAportaciones = usuarioAportacion?.DetallesAportaciones;

                                    var mensajeSinAportes = $"\"{aportacion.Key}\" no realizó aportes este mes";
                                    var mensajeConAportes = detallesAportaciones != null && detallesAportaciones.Count > 1
                                    ? $"\"{aportacion.Key}\" realizo {detallesAportaciones.Count} aportaciones: \n {string.Join("\n ", detallesAportaciones.Select(d => d.Valor.ToString("N2")))}"
                                    : $"\"{aportacion.Key}\" realizó una aportación: {valor.ToString("N2")}";

                                    <td class="aportacion-cell"
                                        data-mensaje-sin-aportes="@mensajeSinAportes"
                                        data-mensaje-con-aportes="@mensajeConAportes">
                                        @valor.ToString("N2")
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>No hay datos disponibles.</p>
            }
        </div>
    </div>
</body>
